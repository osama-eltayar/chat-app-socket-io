<?php

namespace App\Exceptions;

use App\Http\Resources\ErrorResource;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Validation\ValidationException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
        });
    }

    public function render($request, Throwable $e)
    {
        if ($e instanceof ValidationException && $request->wantsJson()) {
            return $this->prepareValidationResponse($e,$request);
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
    
    private function prepareValidationResponse($exception,$request)
    {
        return ErrorResource::make([
            'message' => $exception->getMessage(),
            'errors' => $exception->errors()
        ])
            ->toResponse($request)
            ->setStatusCode($exception->status);
    }
}
